{"ast":null,"code":"var _s = $RefreshSig$();\n// src/middleware/HttpClient.jsx\n\nimport axios from 'axios';\nimport { useEffect } from 'react';\nimport { useKeycloak } from '@react-keycloak/web';\nconst HttpClient = () => {\n  _s();\n  const {\n    keycloak\n  } = useKeycloak();\n  const api = axios.create({\n    baseURL: 'http://localhost:3001',\n    headers: {\n      'Content-Type': 'application/json'\n    }\n  });\n\n  // let token = null;\n\n  // // Custom hook to get the authentication token\n  // const useAuthToken = () => {\n  //   const { keycloak } = useKeycloak();\n\n  //   useEffect(() => {\n  //     const fetchToken = async () => {\n  //       if (!keycloak) return;\n\n  //       try {\n  //         await keycloak.updateToken(); // Ensure the token is updated\n  //         token = keycloak.token; // Retrieve the token from Keycloak\n  //       } catch (error) {\n  //         console.error('Error updating token:', error);\n  //       }\n  //     };\n\n  //     fetchToken();\n\n  //     // Cleanup function (optional)\n  //     return () => {\n  //       token = null; // Clear the token when the component unmounts\n  //     };\n  //   }, [keycloak]);\n\n  //   return token;\n  // };\n\n  // Axios interceptor to attach the token to each request\n  api.interceptors.request.use(config => {\n    // Call the custom hook to retrieve the token\n    if (keycloak.token) {\n      config.headers.Authorization = `Bearer ${keycloak.token}`;\n    }\n    return config;\n  }, error => {\n    return Promise.reject(error);\n  });\n};\n_s(HttpClient, \"RhI8ij3JxyCvHhezn5pOW/NVOzw=\", false, function () {\n  return [useKeycloak];\n});\n_c = HttpClient;\nexport default api;\nvar _c;\n$RefreshReg$(_c, \"HttpClient\");","map":{"version":3,"names":["axios","useEffect","useKeycloak","HttpClient","_s","keycloak","api","create","baseURL","headers","interceptors","request","use","config","token","Authorization","error","Promise","reject","_c","$RefreshReg$"],"sources":["/home/wandi/Documents/Personal Projects/Intern Ship/frontend/game/src/middleware/HttpClient.jsx"],"sourcesContent":["// src/middleware/HttpClient.jsx\n\nimport axios from 'axios';\nimport { useEffect } from 'react';\nimport { useKeycloak } from '@react-keycloak/web';\n\nconst HttpClient= ()=>{\n  const { keycloak } = useKeycloak();\n\nconst api = axios.create({\n  baseURL: 'http://localhost:3001',\n  headers: {\n    'Content-Type': 'application/json',\n  },\n});\n\n// let token = null;\n\n// // Custom hook to get the authentication token\n// const useAuthToken = () => {\n//   const { keycloak } = useKeycloak();\n\n//   useEffect(() => {\n//     const fetchToken = async () => {\n//       if (!keycloak) return;\n\n//       try {\n//         await keycloak.updateToken(); // Ensure the token is updated\n//         token = keycloak.token; // Retrieve the token from Keycloak\n//       } catch (error) {\n//         console.error('Error updating token:', error);\n//       }\n//     };\n\n//     fetchToken();\n\n//     // Cleanup function (optional)\n//     return () => {\n//       token = null; // Clear the token when the component unmounts\n//     };\n//   }, [keycloak]);\n\n//   return token;\n// };\n\n// Axios interceptor to attach the token to each request\napi.interceptors.request.use(\n  (config) => { // Call the custom hook to retrieve the token\n    if (keycloak.token) {\n      config.headers.Authorization = `Bearer ${keycloak.token}`;\n    }\n    return config;\n  },\n  (error) => {\n    return Promise.reject(error);\n  }\n);\n\n}\n\nexport default api;\n"],"mappings":";AAAA;;AAEA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,SAAS,QAAQ,OAAO;AACjC,SAASC,WAAW,QAAQ,qBAAqB;AAEjD,MAAMC,UAAU,GAAEA,CAAA,KAAI;EAAAC,EAAA;EACpB,MAAM;IAAEC;EAAS,CAAC,GAAGH,WAAW,CAAC,CAAC;EAEpC,MAAMI,GAAG,GAAGN,KAAK,CAACO,MAAM,CAAC;IACvBC,OAAO,EAAE,uBAAuB;IAChCC,OAAO,EAAE;MACP,cAAc,EAAE;IAClB;EACF,CAAC,CAAC;;EAEF;;EAEA;EACA;EACA;;EAEA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;;EAEA;EACA;EACA;EACA;EACA;;EAEA;EACA;;EAEA;EACAH,GAAG,CAACI,YAAY,CAACC,OAAO,CAACC,GAAG,CACzBC,MAAM,IAAK;IAAE;IACZ,IAAIR,QAAQ,CAACS,KAAK,EAAE;MAClBD,MAAM,CAACJ,OAAO,CAACM,aAAa,GAAI,UAASV,QAAQ,CAACS,KAAM,EAAC;IAC3D;IACA,OAAOD,MAAM;EACf,CAAC,EACAG,KAAK,IAAK;IACT,OAAOC,OAAO,CAACC,MAAM,CAACF,KAAK,CAAC;EAC9B,CACF,CAAC;AAED,CAAC;AAAAZ,EAAA,CApDKD,UAAU;EAAA,QACOD,WAAW;AAAA;AAAAiB,EAAA,GAD5BhB,UAAU;AAsDhB,eAAeG,GAAG;AAAC,IAAAa,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}