{"ast":null,"code":"var _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\n// src/middleware/HttpClient.jsx\n\nimport axios from 'axios';\nimport { useEffect } from 'react';\nimport { useKeycloak } from '@react-keycloak/web';\nconst HttpClient = () => {};\n_c = HttpClient;\nconst api = axios.create({\n  baseURL: 'http://localhost:3001',\n  headers: {\n    'Content-Type': 'application/json'\n  }\n});\nlet token = null;\n\n// Custom hook to get the authentication token\nconst useAuthToken = () => {\n  _s();\n  const {\n    keycloak\n  } = useKeycloak();\n  useEffect(() => {\n    const fetchToken = async () => {\n      if (!keycloak) return;\n      try {\n        await keycloak.updateToken(); // Ensure the token is updated\n        token = keycloak.token; // Retrieve the token from Keycloak\n      } catch (error) {\n        console.error('Error updating token:', error);\n      }\n    };\n    fetchToken();\n\n    // Cleanup function (optional)\n    return () => {\n      token = null; // Clear the token when the component unmounts\n    };\n  }, [keycloak]);\n  return token;\n};\n\n// Axios interceptor to attach the token to each request\n_s(useAuthToken, \"DPTbhBezflouUoXkjGnL7ocRlhU=\", false, function () {\n  return [useKeycloak];\n});\n_s2(api.interceptors.request.use(_s2(config => {\n  _s2();\n  const authToken = useAuthToken(); // Call the custom hook to retrieve the token\n  if (authToken) {\n    config.headers.Authorization = `Bearer ${authToken}`;\n  }\n  return config;\n}, \"HCiEd0m1+7snjR77r+PgW/A6CmE=\", false, function () {\n  return [useAuthToken];\n}), error => {\n  return Promise.reject(error);\n}), \"HCiEd0m1+7snjR77r+PgW/A6CmE=\", false, function () {\n  return [useAuthToken];\n});\nexport default api;\nvar _c;\n$RefreshReg$(_c, \"HttpClient\");","map":{"version":3,"names":["axios","useEffect","useKeycloak","HttpClient","_c","api","create","baseURL","headers","token","useAuthToken","_s","keycloak","fetchToken","updateToken","error","console","_s2","interceptors","request","use","config","authToken","Authorization","Promise","reject","$RefreshReg$"],"sources":["/home/wandi/Documents/Personal Projects/Intern Ship/frontend/game/src/middleware/HttpClient.jsx"],"sourcesContent":["// src/middleware/HttpClient.jsx\n\nimport axios from 'axios';\nimport { useEffect } from 'react';\nimport { useKeycloak } from '@react-keycloak/web';\n\nconst HttpClient= ()=>{\n  \n}\n\nconst api = axios.create({\n  baseURL: 'http://localhost:3001',\n  headers: {\n    'Content-Type': 'application/json',\n  },\n});\n\nlet token = null;\n\n// Custom hook to get the authentication token\nconst useAuthToken = () => {\n  const { keycloak } = useKeycloak();\n\n  useEffect(() => {\n    const fetchToken = async () => {\n      if (!keycloak) return;\n\n      try {\n        await keycloak.updateToken(); // Ensure the token is updated\n        token = keycloak.token; // Retrieve the token from Keycloak\n      } catch (error) {\n        console.error('Error updating token:', error);\n      }\n    };\n\n    fetchToken();\n\n    // Cleanup function (optional)\n    return () => {\n      token = null; // Clear the token when the component unmounts\n    };\n  }, [keycloak]);\n\n  return token;\n};\n\n// Axios interceptor to attach the token to each request\napi.interceptors.request.use(\n  (config) => {\n    const authToken = useAuthToken(); // Call the custom hook to retrieve the token\n    if (authToken) {\n      config.headers.Authorization = `Bearer ${authToken}`;\n    }\n    return config;\n  },\n  (error) => {\n    return Promise.reject(error);\n  }\n);\n\nexport default api;\n"],"mappings":";;AAAA;;AAEA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,SAAS,QAAQ,OAAO;AACjC,SAASC,WAAW,QAAQ,qBAAqB;AAEjD,MAAMC,UAAU,GAAEA,CAAA,KAAI,CAEtB,CAAC;AAAAC,EAAA,GAFKD,UAAU;AAIhB,MAAME,GAAG,GAAGL,KAAK,CAACM,MAAM,CAAC;EACvBC,OAAO,EAAE,uBAAuB;EAChCC,OAAO,EAAE;IACP,cAAc,EAAE;EAClB;AACF,CAAC,CAAC;AAEF,IAAIC,KAAK,GAAG,IAAI;;AAEhB;AACA,MAAMC,YAAY,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACzB,MAAM;IAAEC;EAAS,CAAC,GAAGV,WAAW,CAAC,CAAC;EAElCD,SAAS,CAAC,MAAM;IACd,MAAMY,UAAU,GAAG,MAAAA,CAAA,KAAY;MAC7B,IAAI,CAACD,QAAQ,EAAE;MAEf,IAAI;QACF,MAAMA,QAAQ,CAACE,WAAW,CAAC,CAAC,CAAC,CAAC;QAC9BL,KAAK,GAAGG,QAAQ,CAACH,KAAK,CAAC,CAAC;MAC1B,CAAC,CAAC,OAAOM,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC;MAC/C;IACF,CAAC;IAEDF,UAAU,CAAC,CAAC;;IAEZ;IACA,OAAO,MAAM;MACXJ,KAAK,GAAG,IAAI,CAAC,CAAC;IAChB,CAAC;EACH,CAAC,EAAE,CAACG,QAAQ,CAAC,CAAC;EAEd,OAAOH,KAAK;AACd,CAAC;;AAED;AAAAE,EAAA,CA1BMD,YAAY;EAAA,QACKR,WAAW;AAAA;AA0BlCe,GAAA,CAAAZ,GAAG,CAACa,YAAY,CAACC,OAAO,CAACC,GAAG,CAAAH,GAAA,CACzBI,MAAM,IAAK;EAAAJ,GAAA;EACV,MAAMK,SAAS,GAAGZ,YAAY,CAAC,CAAC,CAAC,CAAC;EAClC,IAAIY,SAAS,EAAE;IACbD,MAAM,CAACb,OAAO,CAACe,aAAa,GAAI,UAASD,SAAU,EAAC;EACtD;EACA,OAAOD,MAAM;AACf,CAAC;EAAA,QALmBX,YAAY;AAAA,IAM/BK,KAAK,IAAK;EACT,OAAOS,OAAO,CAACC,MAAM,CAACV,KAAK,CAAC;AAC9B,CACF,CAAC;EAAA,QATqBL,YAAY;AAAA;AAWlC,eAAeL,GAAG;AAAC,IAAAD,EAAA;AAAAsB,YAAA,CAAAtB,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}