{"ast":null,"code":"var _s2 = $RefreshSig$();\n// src/middleware/HttpClient.jsx\n\nimport axios from 'axios';\nimport { useEffect } from 'react';\nimport { useKeycloak } from '@react-keycloak/web';\nconst HttpClient = () => {\n  _s2();\n  var _s = $RefreshSig$();\n  const {\n    keycloak\n  } = useKeycloak();\n  const api = axios.create({\n    baseURL: 'http://localhost:3001',\n    headers: {\n      'Content-Type': 'application/json'\n    }\n  });\n  let token = null;\n\n  // Custom hook to get the authentication token\n  const useAuthToken = () => {\n    _s();\n    const {\n      keycloak\n    } = useKeycloak();\n    useEffect(() => {\n      const fetchToken = async () => {\n        if (!keycloak) return;\n        try {\n          await keycloak.updateToken(); // Ensure the token is updated\n          token = keycloak.token; // Retrieve the token from Keycloak\n        } catch (error) {\n          console.error('Error updating token:', error);\n        }\n      };\n      fetchToken();\n\n      // Cleanup function (optional)\n      return () => {\n        token = null; // Clear the token when the component unmounts\n      };\n    }, [keycloak]);\n    return token;\n  };\n\n  // Axios interceptor to attach the token to each request\n  _s(useAuthToken, \"DPTbhBezflouUoXkjGnL7ocRlhU=\", false, function () {\n    return [useKeycloak];\n  });\n  api.interceptors.request.use(config => {\n    // Call the custom hook to retrieve the token\n    if (authToken) {\n      config.headers.Authorization = `Bearer ${authToken}`;\n    }\n    return config;\n  }, error => {\n    return Promise.reject(error);\n  });\n};\n_s2(HttpClient, \"RhI8ij3JxyCvHhezn5pOW/NVOzw=\", false, function () {\n  return [useKeycloak];\n});\n_c = HttpClient;\nexport default api;\nvar _c;\n$RefreshReg$(_c, \"HttpClient\");","map":{"version":3,"names":["axios","useEffect","useKeycloak","HttpClient","_s2","_s","$RefreshSig$","keycloak","api","create","baseURL","headers","token","useAuthToken","fetchToken","updateToken","error","console","interceptors","request","use","config","authToken","Authorization","Promise","reject","_c","$RefreshReg$"],"sources":["/home/wandi/Documents/Personal Projects/Intern Ship/frontend/game/src/middleware/HttpClient.jsx"],"sourcesContent":["// src/middleware/HttpClient.jsx\n\nimport axios from 'axios';\nimport { useEffect } from 'react';\nimport { useKeycloak } from '@react-keycloak/web';\n\nconst HttpClient= ()=>{\n  const { keycloak } = useKeycloak();\n\nconst api = axios.create({\n  baseURL: 'http://localhost:3001',\n  headers: {\n    'Content-Type': 'application/json',\n  },\n});\n\nlet token = null;\n\n// Custom hook to get the authentication token\nconst useAuthToken = () => {\n  const { keycloak } = useKeycloak();\n\n  useEffect(() => {\n    const fetchToken = async () => {\n      if (!keycloak) return;\n\n      try {\n        await keycloak.updateToken(); // Ensure the token is updated\n        token = keycloak.token; // Retrieve the token from Keycloak\n      } catch (error) {\n        console.error('Error updating token:', error);\n      }\n    };\n\n    fetchToken();\n\n    // Cleanup function (optional)\n    return () => {\n      token = null; // Clear the token when the component unmounts\n    };\n  }, [keycloak]);\n\n  return token;\n};\n\n// Axios interceptor to attach the token to each request\napi.interceptors.request.use(\n  (config) => { // Call the custom hook to retrieve the token\n    if (authToken) {\n      config.headers.Authorization = `Bearer ${authToken}`;\n    }\n    return config;\n  },\n  (error) => {\n    return Promise.reject(error);\n  }\n);\n\n}\n\nexport default api;\n"],"mappings":";AAAA;;AAEA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,SAAS,QAAQ,OAAO;AACjC,SAASC,WAAW,QAAQ,qBAAqB;AAEjD,MAAMC,UAAU,GAAEA,CAAA,KAAI;EAAAC,GAAA;EAAA,IAAAC,EAAA,GAAAC,YAAA;EACpB,MAAM;IAAEC;EAAS,CAAC,GAAGL,WAAW,CAAC,CAAC;EAEpC,MAAMM,GAAG,GAAGR,KAAK,CAACS,MAAM,CAAC;IACvBC,OAAO,EAAE,uBAAuB;IAChCC,OAAO,EAAE;MACP,cAAc,EAAE;IAClB;EACF,CAAC,CAAC;EAEF,IAAIC,KAAK,GAAG,IAAI;;EAEhB;EACA,MAAMC,YAAY,GAAGA,CAAA,KAAM;IAAAR,EAAA;IACzB,MAAM;MAAEE;IAAS,CAAC,GAAGL,WAAW,CAAC,CAAC;IAElCD,SAAS,CAAC,MAAM;MACd,MAAMa,UAAU,GAAG,MAAAA,CAAA,KAAY;QAC7B,IAAI,CAACP,QAAQ,EAAE;QAEf,IAAI;UACF,MAAMA,QAAQ,CAACQ,WAAW,CAAC,CAAC,CAAC,CAAC;UAC9BH,KAAK,GAAGL,QAAQ,CAACK,KAAK,CAAC,CAAC;QAC1B,CAAC,CAAC,OAAOI,KAAK,EAAE;UACdC,OAAO,CAACD,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC;QAC/C;MACF,CAAC;MAEDF,UAAU,CAAC,CAAC;;MAEZ;MACA,OAAO,MAAM;QACXF,KAAK,GAAG,IAAI,CAAC,CAAC;MAChB,CAAC;IACH,CAAC,EAAE,CAACL,QAAQ,CAAC,CAAC;IAEd,OAAOK,KAAK;EACd,CAAC;;EAED;EAAAP,EAAA,CA1BMQ,YAAY;IAAA,QACKX,WAAW;EAAA;EA0BlCM,GAAG,CAACU,YAAY,CAACC,OAAO,CAACC,GAAG,CACzBC,MAAM,IAAK;IAAE;IACZ,IAAIC,SAAS,EAAE;MACbD,MAAM,CAACV,OAAO,CAACY,aAAa,GAAI,UAASD,SAAU,EAAC;IACtD;IACA,OAAOD,MAAM;EACf,CAAC,EACAL,KAAK,IAAK;IACT,OAAOQ,OAAO,CAACC,MAAM,CAACT,KAAK,CAAC;EAC9B,CACF,CAAC;AAED,CAAC;AAAAZ,GAAA,CApDKD,UAAU;EAAA,QACOD,WAAW;AAAA;AAAAwB,EAAA,GAD5BvB,UAAU;AAsDhB,eAAeK,GAAG;AAAC,IAAAkB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}