{"ast":null,"code":"var _s = $RefreshSig$();\nimport axios from 'axios';\nimport { useKeycloak } from '@react-keycloak/web';\nconst api = axios.create({\n  baseURL: 'http://localhost:3001',\n  headers: {\n    'Content-Type': 'application/json'\n  }\n});\n\n// Axios interceptor to attach the token to each request\napi.interceptors.request.use(async config => {\n  const token = await getAuthToken(); // Call a function to retrieve the token\n  if (token) {\n    config.headers.Authorization = `Bearer ${token}`;\n  }\n  return config;\n}, error => {\n  return Promise.reject(error);\n});\n\n// Function to get the Keycloak token\nconst getAuthToken = async () => {\n  _s();\n  const {\n    keycloak\n  } = useKeycloak(); // UseKeycloak hook cannot be directly used here\n  if (!keycloak) return null;\n  try {\n    await keycloak.updateToken(); // Ensure the token is updated\n    return keycloak.token; // Retrieve the token from Keycloak\n  } catch (error) {\n    console.error('Error updating token:', error);\n    return null;\n  }\n};\n_s(getAuthToken, \"RhI8ij3JxyCvHhezn5pOW/NVOzw=\", false, function () {\n  return [useKeycloak];\n});\nexport default api;","map":{"version":3,"names":["axios","useKeycloak","api","create","baseURL","headers","interceptors","request","use","config","token","getAuthToken","Authorization","error","Promise","reject","_s","keycloak","updateToken","console"],"sources":["/home/wandi/Documents/Personal Projects/Intern Ship/frontend/game/src/middleware/HttpClient.jsx"],"sourcesContent":["import axios from 'axios';\nimport { useKeycloak } from '@react-keycloak/web';\n\nconst api = axios.create({\n  baseURL: 'http://localhost:3001',\n  headers: {\n    'Content-Type': 'application/json',\n  },\n});\n\n// Axios interceptor to attach the token to each request\napi.interceptors.request.use(\n  async (config) => {\n    const token = await getAuthToken(); // Call a function to retrieve the token\n    if (token) {\n      config.headers.Authorization = `Bearer ${token}`;\n    }\n    return config;\n  },\n  (error) => {\n    return Promise.reject(error);\n  }\n);\n\n// Function to get the Keycloak token\nconst getAuthToken = async () => {\n  const { keycloak } = useKeycloak(); // UseKeycloak hook cannot be directly used here\n  if (!keycloak) return null;\n\n  try {\n    await keycloak.updateToken(); // Ensure the token is updated\n    return keycloak.token; // Retrieve the token from Keycloak\n  } catch (error) {\n    console.error('Error updating token:', error);\n    return null;\n  }\n};\n\nexport default api;\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,WAAW,QAAQ,qBAAqB;AAEjD,MAAMC,GAAG,GAAGF,KAAK,CAACG,MAAM,CAAC;EACvBC,OAAO,EAAE,uBAAuB;EAChCC,OAAO,EAAE;IACP,cAAc,EAAE;EAClB;AACF,CAAC,CAAC;;AAEF;AACAH,GAAG,CAACI,YAAY,CAACC,OAAO,CAACC,GAAG,CAC1B,MAAOC,MAAM,IAAK;EAChB,MAAMC,KAAK,GAAG,MAAMC,YAAY,CAAC,CAAC,CAAC,CAAC;EACpC,IAAID,KAAK,EAAE;IACTD,MAAM,CAACJ,OAAO,CAACO,aAAa,GAAI,UAASF,KAAM,EAAC;EAClD;EACA,OAAOD,MAAM;AACf,CAAC,EACAI,KAAK,IAAK;EACT,OAAOC,OAAO,CAACC,MAAM,CAACF,KAAK,CAAC;AAC9B,CACF,CAAC;;AAED;AACA,MAAMF,YAAY,GAAG,MAAAA,CAAA,KAAY;EAAAK,EAAA;EAC/B,MAAM;IAAEC;EAAS,CAAC,GAAGhB,WAAW,CAAC,CAAC,CAAC,CAAC;EACpC,IAAI,CAACgB,QAAQ,EAAE,OAAO,IAAI;EAE1B,IAAI;IACF,MAAMA,QAAQ,CAACC,WAAW,CAAC,CAAC,CAAC,CAAC;IAC9B,OAAOD,QAAQ,CAACP,KAAK,CAAC,CAAC;EACzB,CAAC,CAAC,OAAOG,KAAK,EAAE;IACdM,OAAO,CAACN,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC;IAC7C,OAAO,IAAI;EACb;AACF,CAAC;AAACG,EAAA,CAXIL,YAAY;EAAA,QACKV,WAAW;AAAA;AAYlC,eAAeC,GAAG"},"metadata":{},"sourceType":"module","externalDependencies":[]}